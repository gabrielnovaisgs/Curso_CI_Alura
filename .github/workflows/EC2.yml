# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Entrega_continua

on:
  #ela é executada somente quandofor chamada
  workflow_call:
  
jobs:
  EC2:
    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3 #estamos usando outro repositório

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        # Artifact name
        name: programa
    #Deploy via ssh para o servidor
    - name: ssh deploy
      uses: easingthemes/ssh-deploy@v2.2.11
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: /home/${{ secrets.REMOTE_USER }}
        EXCLUDE: “postgres-data”
        
      #Execução de scripts na maquina virtual
    - name: executing remote ssh commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        #começar com | permite usar diversos scrips em sequencia
        #Export permite criar uma variavel de ambiente para aquela sessão do terminal
        script: |
          export HOST=${{ secrets.DBHOST }}
          export PORT=${{ secrets.DBPORT }}
          export USER=${{ secrets.DBUSER }}
          export PASSWORD=${{ secrets.DBPASSWORD }}
          export DBNAME=${{ secrets.DBNAME }}
          chmode +x main
          nohup ./main > nohup.out 2> nohup.err < /dev/null &
        
